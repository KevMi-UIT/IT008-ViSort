name: Release

on:
  push:
    tags:
      - v*

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: false

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      TAG: ${{ steps.version_prerelease.outputs.TAG }}
      VERSION: ${{ steps.version_prerelease.outputs.VERSION }}
      PRERELEASE: ${{ steps.version_prerelease.outputs.PRERELEASE }}
      CHANGELOG: ${{ steps.git-cliff.outputs.content }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Get version and prerelease
        id: version_prerelease
        shell: bash
        run: |
          tag=${{ github.event.release.tag_name }}
          version="${tag#v}"
          {
            echo "TAG=$tag"
            echo "VERSION=$version"
            echo "PRERELEASE=$([[ $version =~ ^\d+\.\d+\.\d+$ ]] && echo 'false' || echo 'true')"
          } >> "$GITHUB_OUTPUT"

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          GITHUB_REPO: ${{ github.repository }}

  build:
    name: Release
    needs: prepare
    runs-on: windows-latest
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
    strategy:
      fail-fast: true
      matrix:
        arch:
          - x64
          - x86
          - arm64
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0"
          cache: true
          cache-dependency-path: ViSort/packages.lock.json

      - name: Restore deps
        working-directory: ViSort
        run: dotnet restore --locked-mode

      - name: Build
        working-directory: ViSort
        run: dotnet publish ./ViSort.csproj /p:Configuration=Release -p:Version=${{ needs.prepare.outputs.VERSION }} --arch ${{ matrix.arch }}

      - name: Get publish path
        id: get_publish_path
        shell: bash
        run: |
          path=$(compgen -G 'ViSort/bin/Release/*/win-${{ matrix.arch }}/publish/')
          echo "PUBLISH_PATH=$path" >> "$GITHUB_OUTPUT"

      - name: Rename for each arch
        shell: bash
        working-directory: ${{ steps.get_publish_path.outputs.PUBLISH_PATH }}
        run: mv ViSort.exe ViSort-${{ matrix.arch }}.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ViSort-${{ matrix.arch }}
          path: ${{ steps.get_publish_path.outputs.PUBLISH_PATH }}/ViSort-${{ matrix.arch }}.exe
          compression-level: 6
          retention-days: 30

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - prepare
      - build
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.prepare.outputs.TAG }}
          files: ViSort*/ViSort*.exe
          prerelease: ${{ needs.prepare.outputs.PRERELEASE == 'true' }}
          body: ${{ needs.prepare.outputs.CHANGELOG }}
          make_latest: ${{ needs.prepare.outputs.PRERELEASE == 'false' }}
